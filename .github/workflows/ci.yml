name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod download
      - name: Run unit tests
        run: go test -v ./pkg/... 
      
  integration-test:
    name: Integration Tests with Service
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
      - name: Install dependencies
        run: go mod download
      - name: Build server
        run: go build -o server ./cmd/server
      - name: Start server in background
        run: |
          ./server serve --http="127.0.0.1:8099" &
          echo $! > server.pid
          sleep 5  # 等待服务启动
      - name: Run integration tests
        run: |
          # 等待服务完全启动
          for i in {1..30}; do
            if curl -f http://127.0.0.1:8099/api/health >/dev/null 2>&1; then
              echo "Server is ready!"
              break
            fi
            sleep 1
          done
          # 运行集成测试
          go test -v ./tests/integration/...
      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi 